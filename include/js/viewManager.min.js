Vue.config.silent=!0;
function createView(a){var c={items:[],pages:[],limit:pagination.itemsPerPage,offset:0,currentPage:1,itemsCount:0,itemType:a.itemType,dependencies:a.dependencies,url:a.url},b=new Vue({el:"#"+a.el,data:c,methods:{afterUpdate:function(a){this.$once("iloaded",function(){Vue.nextTick(a)})}}}),d=new ajaxRequest(c.url,a.el,function(){var a=JSON.parse(d.request.responseText);c.items=a.items;c.itemsCount=a.count;a=pagination.listPages(a.count);c.pages=a;b.$emit("iloaded")});d.sendRequest();return b}
function updateView(a,c){void 0===c&&(c=!0);var b=a.url;0<a.limit&&(b+="&limit="+a.limit);0<a.offset&&(b+="&offset="+a.offset);var d=new ajaxRequest(b,a.$el.id,function(){var b=JSON.parse(d.request.responseText);Vue.set(a,"items",b.items);Vue.set(a,"pages",pagination.listPages(b.count));a.$emit("iloaded");if(1==c&&(b=a.$get("dependencies"),0<b.length))for(var e=0;e<b.length;e++)Vue.set(b[e],"limit",a.limit),Vue.set(b[e],"offset",a.offset),updateView(b[e],b[e].url)});d.sendRequest()}
var pagination={itemsPerPage:10,listPages:function(a){a=Math.ceil(a/this.itemsPerPage);for(var c=[],b=0;b<a;b++){var d=b+1;c.push({index:d,limit:d*this.itemsPerPage})}return c},loadPage:function(a,c){var b=c*this.itemsPerPage-this.itemsPerPage;Vue.set(a,"limit",this.itemsPerPage);Vue.set(a,"offset",b);Vue.set(a,"currentPage",c);updateView(a,!0)},loadNextPage:function(a){var c=a.$get("currentPage"),b=Math.ceil(a.$get("itemsCount")/this.itemsPerPage),c=c+1;c>b&&(c=b);this.loadPage(a,c)},loadPrevPage:function(a){var c=
a.$get("currentPage")-1;1>c&&(c=1);this.loadPage(a,c)}};
function submitForm(a){var c=a.currentTarget,b=c.action,d=validateCompleteForm(c);a.stopPropagation();a.preventDefault();if(1==d){a="";for(i=0;i<c.elements.length;i++)d=c.elements[i],void 0!=d.value&&(a+="&"+d.name+"="+d.value);var f=new ajaxRequest(b,"",function(){if("ok"==f.request.responseText){updateView(formView,!1);systemMessage.added(formView.$get("itemType"));try{formSubmited()}catch(a){}}});f.requestType="POST";f.postBody=a;f.sendRequest()}}
function startWait(a){document.getElementById(a).style.display="block"}function stopWait(a){document.getElementById(a).style.display="none"}closeEndcolor="#377814";deleteEndcolor="#c62424";function confirmDelete(a,c,b,d){1==confirm(a)&&deleteElement(c,b,d)}function deleteElement(a,c,b){var d=new ajaxRequest(c,"",function(){"ok"==d.request.responseText&&(removeRow(a,deleteEndcolor),void 0!=b&&(updateView(b),systemMessage.deleted(b.$get("itemType"))))});d.sendRequest()}
function closeElement(a,c,b){var d=new ajaxRequest(c,"",function(){"ok"==d.request.responseText&&(removeRow(a,closeEndcolor),void 0!=b&&(updateView(b),systemMessage.closed(b.$get("itemType"))))});d.sendRequest()}function removeRow(a,c){var b=document.getElementById(a);null!=b&&(b.style.backgroundColor="#FFFFFF",Velocity(b,{backgroundColor:c,backgroundColorAlpha:.6},{complete:function(){Velocity(b,"fadeOut",{delay:1E3,duration:2500})}}))}
var paginationComponent=Vue.extend({props:["view","pages","currentPage"],template:'<template v-if=\'pages.length > 1\'><span id="paging" style="margin-left:10px;"> <button style="float:none;font-size:9pt;margin:0 1px 0 1px;" onclick="pagination.loadPrevPage({{view}})"><<</button><span id="page{{page.index}}" v-for="page in pages" style="margin-left:2px;"> <button v-bind:class="currentPage == page.index ? \'paginationActive\' : \'paginationInactive\' " onclick="pagination.loadPage({{view}},{{page.index}});">{{page.index}}</button> </span> <button style="float:none;font-size:9pt;margin:0 1px 0 1px;" onclick="pagination.loadNextPage({{view}})">>></button> </span></template>'});
Vue.component("pagination",paginationComponent);var progressComponent=Vue.extend({props:["block","loader"],template:'<div class="progress" id="progress{{block}}" style="float:left;display:none;">    <img src="templates/standard/theme/standard/images/symbols/{{loader}}"/> </div>'});Vue.component("loader",progressComponent);Vue.filter("truncate",function(a,c){return a.length>=c?a.substr(0,c)+"...":a});
