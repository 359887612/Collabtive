Vue.config.silent=!0;
function createView(a){var b={items:[],pages:[],limit:pagination.itemsPerPage,offset:0,currentPage:1,itemsCount:0,itemType:a.itemType,dependencies:a.dependencies,url:a.url},d=new Vue({el:"#"+a.el,data:b}),c=new XMLHttpRequest;c.onloadstart=function(b){document.getElementById("progress"+a.el).style.display="block"};c.onload=function(){var a=JSON.parse(c.responseText);b.items=a.items;b.itemsCount=a.count;a=pagination.listPages(a.count);b.pages=a;d.$dispatch("iloaded")};c.onloadend=function(b){document.getElementById("progress"+
a.el).style.display="none"};c.open("GET",b.url);c.send();return d}
function updateView(a,b){void 0===b&&(b=!0);var d=a.url;0<a.limit&&(d+="&limit="+a.limit);0<a.offset&&(d+="&offset="+a.offset);new Ajax.Request(d,{method:"get",onSuccess:function(c){c=JSON.parse(c.responseText);Vue.set(a,"items",c.items);Vue.set(a,"pages",pagination.listPages(c.count));if(1==b&&(c=a.$get("dependencies"),0<c.length))for(var d=0;d<c.length;d++)Vue.set(c[d],"limit",a.limit),Vue.set(c[d],"offset",a.offset),updateView(c[d],c[d].url)},onLoading:function(){startWait("progress"+a.$el.id)},
onComplete:function(){stopWait("progress"+a.$el.id);a.$emit("updated")},onFailure:function(){}})}
var pagination={itemsPerPage:10,listPages:function(a){a=Math.ceil(a/this.itemsPerPage);for(var b=[],d=0;d<a;d++){var c=d+1;b.push({index:c,limit:c*this.itemsPerPage})}return b},loadPage:function(a,b){var d=b*this.itemsPerPage-this.itemsPerPage;Vue.set(a,"limit",this.itemsPerPage);Vue.set(a,"offset",d);Vue.set(a,"currentPage",b);updateView(a,!0)},loadNextPage:function(a){var b=a.$get("currentPage"),d=Math.ceil(a.$get("itemsCount")/this.itemsPerPage),b=b+1;b>d&&(b=d);this.loadPage(a,b)},loadPrevPage:function(a){var b=
a.$get("currentPage")-1;1>b&&(b=1);this.loadPage(a,b)}};
function submitForm(a){var b=a.currentTarget,d=b.action,c=validateCompleteForm(b);console.log("validates:"+c);a.stopPropagation();a.preventDefault();if(1==c){a="";for(i=0;i<b.elements.length;i++)c=b.elements[i],void 0!=c.value&&(a+="&"+c.name+"="+c.value);new Ajax.Request(d,{method:"POST",postBody:a,onSuccess:function(a){200==a.status&&(updateView(formView,!1),systemMessage.added(formView.$get("itemType")))},onLoading:function(){startWait("progress"+formView.$el)},onComplete:function(){console.log("added");
stopWait("progress"+formView.$el)},onFailure:function(){console.log("error")}})}}function startWait(a){document.getElementById(a).style.display="block"}function stopWait(a){document.getElementById(a).style.display="none"}closeEndcolor="#377814";deleteEndcolor="#c62424";function confirmDelete(a,b,d,c){1==confirm(a)&&deleteElement(b,d,c)}
function deleteElement(a,b,d){var c=new XMLHttpRequest;c.onload=function(){"ok"==c.responseText&&(removeRow(a,deleteEndcolor),void 0!=d&&(updateView(d),systemMessage.deleted(d.$get("itemType"))))};c.open("GET",b);c.send()}function closeElement(a,b,d){var c=new XMLHttpRequest;c.onload=function(){"ok"==c.responseText&&(removeRow(a,closeEndcolor),void 0!=d&&(updateView(d),systemMessage.closed(d.$get("itemType"))))};c.open("GET",b);c.send()}
function removeRow(a,b){new Effect.Highlight(a,{duration:1.5,startcolor:"#FFFFFF",endcolor:b});new Effect.Fade(a,{duration:1.5,rowid:a})}var paginationComponent=Vue.extend({props:["view","pages","currentPage"],template:'<template v-if=\'pages.length > 1\'><span id="paging" style="margin-left:10px;"> <button style="float:none;font-size:9pt;margin:0 1px 0 1px;" onclick="pagination.loadPrevPage({{view}})"><<</button><span id="page{{page.index}}" v-for="page in pages" style="margin-left:2px;"> <button v-bind:class="currentPage == page.index ? \'paginationActive\' : \'paginationInactive\' " onclick="pagination.loadPage({{view}},{{page.index}});">{{page.index}}</button> </span> <button style="float:none;font-size:9pt;margin:0 1px 0 1px;" onclick="pagination.loadNextPage({{view}})">>></button> </span></template>'});
Vue.component("pagination",paginationComponent);var progressComponent=Vue.extend({props:["block","loader"],template:'<div class="progress" id="progress{{block}}" style="float:left;display:none;">    <img src="templates/standard/theme/standard/images/symbols/{{loader}}"/> </div>'});Vue.component("loader",progressComponent);Vue.filter("truncate",function(a,b){return a.length>=b?a.substr(0,b)+"...":a});
